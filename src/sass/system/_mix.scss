@mixin font-size($size, $lineHeight: $size) {
  font-size: $size;
  @if $lineHeight == 0 {
    line-height: 1;
  } @else {
    line-height: calc($lineHeight / $size);
  }
}

@mixin flex-width($width) {
  width: $width;
  max-width: $width;
  flex: 0 0 $width;
  min-width: 1px;
}

@mixin square($size) {
  width: $size;
  height: $size;
}

@mixin absolute-layer() {
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
}

@mixin hyphens($symbol: '-') {
  word-wrap: break-word;
  overflow-wrap: break-word;
  -webkit-hyphens: auto;
  -ms-hyphens: auto;
  hyphens: auto;
  hyphenate-character: $symbol;
}

@mixin text-overflow($value) {
  @if $value == 0 {
    max-width: unset;
    overflow: unset;
    text-overflow: unset;
    white-space: unset;
  }
  @else {
    max-width: 100%;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }
}

@mixin line-clamp($lines: 3) {
  @if $lines == 0 {
    display: block;
    -webkit-line-clamp: none;
    -webkit-box-orient: initial;
    overflow: unset;
    text-overflow: unset;
    word-wrap: unset;
  }
  @else {
    display: -webkit-box;
    line-clamp: $lines;
    -webkit-line-clamp: $lines;
    -webkit-box-orient: vertical;
    overflow: hidden;
    text-overflow: ellipsis;
    word-wrap: break-word;
  }
}

@mixin hide-scroll {
  -ms-overflow-style: none;
  scrollbar-width: none;
  overscroll-behavior: contain;

  &::-webkit-scrollbar {
    display: none;
  }
}

@mixin img-cover() {
  width: 100%;
  height: 100%;
  object-fit: cover;
  display: block;
  user-select: none;
}

@mixin safari-radius() {
  // Fix overflow from bd radius
  -webkit-backface-visibility: hidden;
  -moz-backface-visibility: hidden;
  backface-visibility: hidden;
  -webkit-transform: translate3d(0, 0, 0);
  -moz-transform: translate3d(0, 0, 0);
  transform: translate3d(0, 0, 0);
  -webkit-mask-image: -webkit-radial-gradient(white, black);
}

@mixin better-fonts() {
  // For dark backgrounds
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

@mixin btn-reset() {
  border: 0;
  background: transparent;
  margin: 0;
  padding: 0;
  user-select: none;
}

@mixin blur($val) {
  -webkit-backdrop-filter: blur($val);
  backdrop-filter: blur($val);
  will-change: backdrop-filter;
}


// MEDIA
// Универсальный миксин для медиа-запросов
@mixin media($media) {
  @if $media == fullhd {
    @media only screen and (max-width: calc($media-fullhd - 1px)) {
      @content;
    }
  }

  @else if $media == fullhd-min {
    @media only screen and (min-width: calc($media-fullhd + 1px)) {
      @content;
    }
  }

  @else if $media == hd {
    @media only screen and (max-width: calc($media-hd - 1px)) {
      @content;
    }
  }

  @else if $media == hd-min {
    @media only screen and (min-width: calc($media-hd + 1px)) {
      @content;
    }
  }

  @else if $media == desktop {
    @media only screen and (max-width: calc($media-desktop - 1px)) {
      @content;
    }
  }

  @else if $media == desktop-min {
    @media only screen and (min-width: calc($media-desktop + 1px)) {
      @content;
    }
  }

  @else if $media == notebook {
    @media only screen and (max-width: calc($media-notebook - 1px)) {
      @content;
    }
  }

  @else if $media == notebook-min {
    @media only screen and (min-width: calc($media-notebook + 1px)) {
      @content;
    }
  }

  @else if $media == tablet {
    @media only screen and (max-width: calc($media-tablet - 1px)) {
      @content;
    }
  }

  @else if $media == tablet-min {
    @media only screen and (min-width: calc($media-tablet + 1px)) {
      @content;
    }
  }

  @else if $media == smartphone {
    @media only screen and (max-width: calc($media-smartphone - 1px)) {
      @content;
    }
  }

  @else if $media == smartphone-min {
    @media only screen and (min-width: calc($media-smartphone + 1px)) {
      @content;
    }
  }

  @else if $media == phone {
    @media only screen and (max-width: calc($media-phone - 1px)) {
      @content;
    }
  }

  @else if $media == phone-min {
    @media only screen and (min-width: calc($media-phone + 1px)) {
      @content;
    }
  }

  @else if $media == last {
    @media only screen and (max-width: calc($media-end - 1px)) {
      @content;
    }
  }

  @else if $media == retina {
    @media (min-resolution: $retina-dpi), (min-resolution: $retina-dppx) {
      @content;
    }
  }

  @else if $media == hover {
    @media (hover: hover), screen and (min-width: 0\0) {
      @content;
    }
  }

  @else if $media == animation {
    @media (prefers-reduced-motion: no-preference) {
      @content;
    }
  }
}
